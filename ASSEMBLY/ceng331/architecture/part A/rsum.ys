#Emrah KOSEN
#1942317

	.pos 0
	irmovq stack, %rsp
	call main
	halt



	# Sample linked list
	.align 8
ele1:
	.quad 0x00a
	.quad ele2
ele2:
	.quad 0x0b0
	.quad ele3
ele3:
	.quad 0xc00
	.quad 0








main:	irmovq ele1,%rdi     									#first element of linked list
	call rsum_list															# sum_list((list_ptr ls)
	ret

																						# long sum_list(list_ptr start)
																						# ls in %rdi
rsum_list:
	xorq %rax,%rax        									# return value initially 0
	andq %rdi, %rdi													#if ls == null
	je end
	pushq %rbx
	mrmovq (%rdi), %rbx	              			# Get rbx = ls->val
	mrmovq 8(%rdi), %rdi                     # rdi = rdi->next
	call rsum_list
	addq %rbx, %rax
	popq %rbx

end:
	ret                  										# Return

																					# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
